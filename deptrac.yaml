parameters:
  formatters:
    graphviz:
      hidden_layers:
        - Vendor
      point_to_groups: false
  paths:
    - ./src
  layers:
    - name: Domain
      collectors:
        - { type: directory, value: /src/Domain/ }

    - name: View
      collectors:
        - { type: directory, value: /src/View/ }

    - name: Infrastructure
      collectors:
        # There is barely a difference between infrastructure and vendor
        - { type: directory, value: /src/Lib/ }
        - { type: directory, value: /src/Repository/ }

    - name: Application
      collectors:
        - type: bool
          must:
            - { type: directory, value: /src/ }
          must_not:
            - { type: layer, value: Infrastructure }
            - { type: layer, value: Domain }
            - { type: layer, value: View }

    - name: Vendor
      collectors:
        - { type: bool, must_not: [ { type: classLike, value: ^App\\ } ] }

  ruleset:
    Application:
      - Domain
      - View
      - Infrastructure
      - Vendor
    Domain:
      - Vendor
      - Infrastructure
    View:
      - Domain
      - Vendor
      - Infrastructure
    Infrastructure:
      - Vendor

  # Skip only interaction between transitioning layer(repository with domain)
  # Explanation: repository implementation is infrastructural, while contract is coming from domain.
  skip_violations:
    App\Repository\CommentRepository:
      - App\Domain\Entity\Comment
      - App\Domain\Entity\Post
      - App\Domain\Repository\CommentRepositoryInterface
    App\Repository\PostRepository:
      - App\Domain\Entity\Post
      - App\Domain\Repository\PostRepositoryInterface
      - App\Domain\Repository\PostFilter
