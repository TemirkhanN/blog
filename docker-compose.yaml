services:
  frontend:
    image: nginx:1.21
    volumes:
      - ./.docker/client/nginx.conf:/etc/nginx/templates/default.conf.template:ro
      - ./public:/app/public:ro
    ports:
      - "80:80"
    networks:
      appnet:
        aliases:
          - blog.internal
    depends_on:
      - backend
  backend:
    build:
      context: ./
      target: dev_container
    env_file:
      - .env
      - .env.local
    environment:
      - BLOG_HOST=http://blog.internal
    volumes:
      - ./:/app
      - .composer/:/var/www/.composer/
    networks:
      - appnet
      - infranet
    depends_on:
      db: { condition: service_healthy }
    post_start:
      - command: composer install --no-interaction
        user: www-data
      - command: php bin/console doctrine:migrations:migrate --no-interaction
        user: www-data
      - command: php bin/console sitemap:generate
        user: www-data
  db:
    image: sameersbn/postgresql:12-20200524
    environment:
      - DB_USER
      - DB_PASS
      - DB_NAME
    ports:
      - '5432:5432'
    networks:
      - infranet
    volumes:
      - db-storage:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      retries: 5
      timeout: 3s
networks:
  infranet:
  appnet:

volumes:
  db-storage:
