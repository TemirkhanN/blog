imports:
    - { resource: repositories.yaml }
    - { resource: views.yaml }
# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # Erm.. Token storage for authentication and etc. Must be replaced with repository
    tokens_map:
        Temirkhan: '%env(MY_VERY_SECRET_TOKEN)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/{EventSubscriber,Service,Security,View}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Temirkhan\View\ViewFactory: ~
    Temirkhan\View\ViewFactoryInterface: '@Temirkhan\View\ViewFactory'

    Redis:
        class: RedisCluster
        factory: [Symfony\Component\Cache\Adapter\RedisAdapter, createConnection]
        arguments:
            - '%env(REDIS_URL)%'
            -
                persistent: 1

    App\Resolver\AuthorResolver:
        arguments:
            $tokens: '%tokens_map%'
        tags: [{name: controller.argument_value_resolver }]

    App\Security\TokenAuthenticator:
        arguments:
            $tokens: '%tokens_map%'