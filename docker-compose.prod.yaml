services:
  frontend:
    build:
      context: ./
      dockerfile: Dockerfile.frontend
    environment:
      - BLOG_DOMAIN_NAME
      - SSLCERT_OWNER_EMAIL
    ports:
      - "80:80"
      - "443:443"
    networks:
      appnet:
        aliases:
          - blog.internal
    depends_on:
      - backend
    logging:
      driver: local
      options:
        max-size: "2m"
        max-file: "2"
    volumes:
      - ssl-cert:/etc/letsencrypt/
  backend:
    build:
      context: ./
      target: prod_container
      args:
        APP_ENV: ${APP_ENV}
    environment:
      - APP_ENV
      - APP_SECRET
      - MY_VERY_SECRET_TOKEN
      - DB_HOST
      - DB_PORT
      - DB_USER
      - DB_PASS
      - DB_NAME
      - DB_VERSION
      - DB_DRIVER
      - TELEGRAM_BOT_TOKEN
      - TELEGRAM_ADMIN_CHAT_ID
      - ADMIN_NOTIFICATIONS_ENABLED
      - BLOG_HOST=http://blog.internal
      - BLOG_DOMAIN_NAME
      - SENTRY_DSN
    networks:
      - appnet
      - infranet
    depends_on:
      db: { condition: service_healthy }
      cache: { condition: service_started }
    post_start:
      - command: php bin/console doctrine:migrations:migrate --no-interaction
        user: www-data
    logging:
      driver: local
      options:
        max-size: "1m"
        max-file: "2"
  db:
    image: sameersbn/postgresql:12-20200524
    environment:
      - DB_USER
      - DB_PASS
      - DB_NAME
    networks:
      - infranet
    volumes:
      - db-storage:/var/lib/postgresql
    logging:
      driver: local
      options:
        max-size: "2m"
        max-file: "2"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      retries: 5
      timeout: 3s
  cache:
    image: redis
    networks:
      - infranet
    logging:
      driver: local
      options:
        max-size: "1m"
        max-file: "2"

networks:
  infranet:
  appnet:

volumes:
  db-storage:
  ssl-cert:
